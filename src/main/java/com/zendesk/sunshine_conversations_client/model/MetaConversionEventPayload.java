/*
 * Sunshine Conversations API
 *
 * The version of the OpenAPI document: 15.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zendesk.sunshine_conversations_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The payload to be sent to Meta&#39;s conversion events API. Should contain the exact structure expected by [Meta&#39;s Conversions API](https://developers.facebook.com/docs/marketing-api/conversions-api/parameters/server-event) except for the &#x60;user_data&#x60; field, which will be provided by Zendesk.
 */
@ApiModel(description = "The payload to be sent to Meta's conversion events API. Should contain the exact structure expected by [Meta's Conversions API](https://developers.facebook.com/docs/marketing-api/conversions-api/parameters/server-event) except for the `user_data` field, which will be provided by Zendesk.")
@JsonPropertyOrder({
  MetaConversionEventPayload.JSON_PROPERTY_DATA
})

public class MetaConversionEventPayload {
  public static final String JSON_PROPERTY_DATA = "data";
  private List<Object> data = new ArrayList<>();


  public MetaConversionEventPayload data(List<Object> data) {
    
    this.data = data;
    return this;
  }

  public MetaConversionEventPayload addDataItem(Object dataItem) {
    this.data.add(dataItem);
    return this;
  }

   /**
   * The array of conversion events to be sent to Meta&#39;s conversion events API.
   * @return data
  **/
  @ApiModelProperty(required = true, value = "The array of conversion events to be sent to Meta's conversion events API.")
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Object> getData() {
    return data;
  }


  public void setData(List<Object> data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetaConversionEventPayload metaConversionEventPayload = (MetaConversionEventPayload) o;
    return Objects.equals(this.data, metaConversionEventPayload.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetaConversionEventPayload {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

