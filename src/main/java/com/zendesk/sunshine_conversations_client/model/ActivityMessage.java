/*
 * Sunshine Conversations API
 *
 * The version of the OpenAPI document: 14.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zendesk.sunshine_conversations_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zendesk.sunshine_conversations_client.model.TicketClosed;
import com.zendesk.sunshine_conversations_client.model.TransferToEmail;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ActivityMessage
 */
@JsonPropertyOrder({
  ActivityMessage.JSON_PROPERTY_TYPE,
  ActivityMessage.JSON_PROPERTY_DATA
})

@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = TicketClosed.class, name = "ticket:closed"),
  @JsonSubTypes.Type(value = TransferToEmail.class, name = "ticket:transfer:email"),
  @JsonSubTypes.Type(value = TicketClosed.class, name = "ticketClosed"),
  @JsonSubTypes.Type(value = TransferToEmail.class, name = "transferToEmail"),
})

public class ActivityMessage {
  public static final String JSON_PROPERTY_TYPE = "type";
  protected String type = "ticket:transfer:email";

  public static final String JSON_PROPERTY_DATA = "data";
  private Map<String, Object> data = null;


  public ActivityMessage type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of system activity that generated the message. The value of this field determines the dynamic content that is rendered to the end-user / agent when viewing this message. Each &#x60;type&#x60; value will have a set of pre-defined, localized strings that describe the activity.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The type of system activity that generated the message. The value of this field determines the dynamic content that is rendered to the end-user / agent when viewing this message. Each `type` value will have a set of pre-defined, localized strings that describe the activity.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ActivityMessage data(Map<String, Object> data) {
    
    this.data = data;
    return this;
  }

   /**
   * No additional data is supplied with the \&quot;ticket:transfer:email\&quot; activity type at this time.
   * @return data
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "No additional data is supplied with the \"ticket:transfer:email\" activity type at this time.")
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getData() {
    return data;
  }


  public void setData(Map<String, Object> data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityMessage activityMessage = (ActivityMessage) o;
    return Objects.equals(this.type, activityMessage.type)Objects.equals(this.data, activityMessage.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typedata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityMessage {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

